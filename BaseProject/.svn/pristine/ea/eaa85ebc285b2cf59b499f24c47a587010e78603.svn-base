//
//  MineController.m
//  LFBaseFrameTwo
//
//  Created by 曹老师 on 2018/5/15.
//  Copyright © 2018年 admin. All rights reserved.
//

#import "MineController.h"
#import "LoginController.h"
#import "CYCnavController.h"
#import "EncryptForInterface.h"
#import "MineCell.h"
#import "MineInviteFriendsController.h"
#import "SafeSettingController.h"
#import "SettingController.h"
#import "PersonalCenterController.h"

@interface MineController () <UITableViewDelegate, UITableViewDataSource> {
    UserInformation *userInfo;              // 用户信息单例
    UITableView *_listTableView;    // 列表
}

@end

@implementation MineController


#pragma mark ========================================生命周期========================================
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"";
    self.navBar.navView.backgroundColor = [UIColor clearColor];
    self.navBar.right.hidden = NO;
    [self.navBar.right setImage:[UIImage imageNamed:@"设置"] forState:UIControlStateNormal];
    [self.navBar.right setTitle:@"" forState:UIControlStateNormal];
    [self.navBar.right addTarget:self action:@selector(settingButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    
    // 表视图
    _listTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight - TabBar_Height)
                                                  style:UITableViewStylePlain];
    _listTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _listTableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    _listTableView.backgroundColor = [UIColor clearColor];
    _listTableView.rowHeight = 60;
    _listTableView.delegate = self;
    _listTableView.dataSource = self;
    [_listTableView registerNib:[UINib nibWithNibName:@"MineCell" bundle:[NSBundle mainBundle]]
         forCellReuseIdentifier:@"MineCell"];
    [self.view addSubview:_listTableView];
    
    
    if(@available(iOS 11.0, *)){
        _listTableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    [self.view insertSubview:_listTableView atIndex:0];
    
}


- (void)viewWillAppear:(BOOL)animated {
    
    [super viewWillAppear:animated];
    
    [self checkLoginAction];
    
    
    
}



#pragma mark - 检测登录状态
- (void)checkLoginAction {
    
    /*
     * 判断是否有7天内的登录userId，有的话直接登录
     */
    
    if (userInfo.isLoginWithUserId) {
        // 已经登录
        
        
        // 登录，获取个人信息
        NSString *method = [NSString stringWithFormat:@"GetEntityUser"];
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             userInfo.UserId,@"UserId",
                             nil];
        
        
        [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
            
            NSString *code = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
            
            if ([code isEqualToString:@"200"]) {
                
                userInfo = [UserInformation mj_objectWithKeyValues:responseObject[@"Data"]];
                
                [_listTableView reloadData];
                
                
            }
            
            
        } failure:^(NSError *error) {
            
            
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            
        }];
        
        
        return;
    }
    
    //7天内记住用户登录状态，读取NSUserDefaults文件
    if ([[NSUserDefaults standardUserDefaults] objectForKey:@"LoginDate"] == nil ||
        [[NSUserDefaults standardUserDefaults] objectForKey:@"LoginUserId"] == nil) {
        
        NSLog(@"没有登录记录，正常登录");
        
        CYCnavController *nav = [[CYCnavController alloc] initWithRootViewController:[[LoginController alloc] init]];
        [self presentViewController:nav animated:YES completion:nil];
        
    } else {
        //登录时间
        NSString *loginDate = [[NSUserDefaults standardUserDefaults] objectForKey:@"LoginDate"];
        
        if ([SmallFunctionTool timeDifferenceForNow:loginDate] > (3600 * 24 * 7)) {
            NSLog(@"没有7天内的登录记录，正常登录");
            
            CYCnavController *nav = [[CYCnavController alloc] initWithRootViewController:[[LoginController alloc] init]];
            [self presentViewController:nav animated:YES completion:nil];
            
        } else {
            
            //登录id
            NSString *loginUserId = [[NSUserDefaults standardUserDefaults] objectForKey:@"LoginUserId"];
            
            NSString *username = [EncryptForInterface decryptWithText:loginUserId];
            
            // 登录，获取个人信息
            NSString *method = [NSString stringWithFormat:@"GetEntityUser"];
            NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                                 username,@"UserId",
                                 nil];
            
            [SVProgressHUD showWithStatus:@"登录中"];
            
            [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
                
                NSString *code = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
                
                if ([code isEqualToString:@"200"]) {
                    
                    userInfo = [UserInformation mj_objectWithKeyValues:responseObject[@"Data"]];
                    
                    //7天内记住用户登录状态，将时间和useId存入NSUserDefaults
                    {
                        //获取当前时间
                        NSString *nowTime = [SmallFunctionTool transitionDateToString:[NSDate date]];
                        //加密userId
                        NSString *encryptStr = [EncryptForInterface encryptWithText:username];
                        
                        //存入NSUserDefaults文件中
                        NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
                        [userDefaults setObject:nowTime forKey:@"LoginDate"];
                        [userDefaults setObject:encryptStr forKey:@"LoginUserId"];
                        [userDefaults synchronize]; //立即同步
                    }
                    
                    [_listTableView reloadData];
                    
                    
                } else {
                    
                    // 登录失败
                    dispatch_async(dispatch_get_main_queue(), ^{
                        
                        CYCnavController *nav = [[CYCnavController alloc] initWithRootViewController:[[LoginController alloc] init]];
                        [self presentViewController:nav animated:YES completion:nil];
                    });
                }
                
                [SVProgressHUD dismiss];
                
            } failure:^(NSError *error) {
                
                CYCnavController *nav = [[CYCnavController alloc] initWithRootViewController:[[LoginController alloc] init]];
                [self presentViewController:nav animated:YES completion:nil];
                
                //后台连接直接不成功，弹出“连接服务器失败”
                [SVProgressHUD dismiss];
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"网络异常：连接服务器失败"];
                
            }];
        }
    }
    
    
}

#pragma mark ========================================动作响应=============================================

#pragma mark - 设置
- (void)settingButtonAction:(UIButton *)button {
    
    SettingController *ctrl = [[SettingController alloc] init];
    [self.navigationController pushViewController:ctrl animated:YES];
    
}

#pragma mark ========================================网络请求=============================================

#pragma mark ========================================代理方法=============================================

#pragma mark - 表视图代理方法
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return 1;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    return kScreenWidth * 0.75 + 300;
    
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    
    return 0.01;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    
    return 0.01;
    
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    __block MineCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MineCell"
                                                            forIndexPath:indexPath];
    
    if (userInfo.isLoginWithUserId == 0) {
        return cell;
    }
    
    UIImage *_icon;
    if (userInfo.Gender.integerValue == 0) {
        _icon = [UIImage imageNamed:@"boy"];
    } else {
        _icon = [UIImage imageNamed:@"girl"];
    }
    
    
    // 头像
    if ([userInfo.HeadIcon isEqualToString:@""] || userInfo.HeadIcon == nil) {
        //无自定义头像，则使用默认头像
        cell.icon.image = _icon;
    } else {
        //有自定义头像，则下载并显示
        NSString *path = [NSString stringWithFormat:@"%@%@", Image_Base_URL, userInfo.HeadIcon];
        [cell.icon sd_setImageWithURL:[NSURL URLWithString:path]
                     placeholderImage:_icon
                              options:SDWebImageRetryFailed];
    }
    
    // 昵称
    if (userInfo.NickName == nil || [userInfo.NickName isEqualToString:@""]) {
        cell.name.text = @"未设置";
    } else {
        cell.name.text = userInfo.NickName;
    }
    
    // 企业
    if (userInfo.IsSpecial.integerValue > 0) {
        cell.nameIcon.hidden = 0;
    } else {
        cell.nameIcon.hidden = 1;
    }
    
    cell.tip.text = userInfo.RoleName;
    
    // 会员
    if (userInfo.RoleType.integerValue > 0) {
        cell.tipIcon.hidden = 0;
    } else {
        cell.tipIcon.hidden = 1;
    }
    
    [cell.icon addAction:^{
        // 点击头像
        PersonalCenterController *ctrl = [[PersonalCenterController alloc] init];
        [self.navigationController pushViewController:ctrl animated:YES];
    }];
    
    [cell.button1 addAction:^(NSInteger index) {
        // 文章
        [UIView animateWithDuration:.35 animations:^{
            cell.flowView.transform = CGAffineTransformMakeTranslation(0, 0);
            [cell.button1 setTitleColor:Label_Color_A forState:UIControlStateNormal];
            [cell.button1 setTitleColor:Publie_Color forState:UIControlStateNormal];
            cell.view2.hidden = 1;
        }];
    }];
    
    [cell.button2 addAction:^(NSInteger index) {
        // 钱币
        [UIView animateWithDuration:.35 animations:^{
            cell.flowView.transform = CGAffineTransformMakeTranslation(cell.button2.center.x - cell.button1.center.x, 0);
            [cell.button1 setTitleColor:Publie_Color forState:UIControlStateNormal];
            [cell.button1 setTitleColor:Label_Color_A forState:UIControlStateNormal];
            cell.view2.hidden = 0;
        }];
    }];
    
    [cell.safeButton addAction:^(NSInteger index) {
        // 安全中心
        SafeSettingController *ctrl = [[SafeSettingController alloc] init];
        [self.navigationController pushViewController:ctrl animated:YES];
    }];
    
    [cell.friendButton addAction:^(NSInteger index) {
        // 我的好友
        MineInviteFriendsController *ctrl = [[MineInviteFriendsController alloc] init];
        [self.navigationController pushViewController:ctrl animated:YES];
    }];
    
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
}




































@end
