//
//  CommentController.m
//  BaseProject
//
//  Created by 曹老师 on 2018/8/23.
//  Copyright © 2018年 众利创投. All rights reserved.
//

#import "CommentController.h"
#import "CommentListCell.h"
#import "IQKeyboardManager.h"
#import "CommentListModel.h"
#import "CommentListHeader.h"

@interface CommentController () <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate> {
    
    UITableView *_listTableView;
    NSInteger currentPage;
    NSMutableArray *dataArray;   // 数据列表
    UIView *noDataView;
    NSString *commentCount;
    
}

@end

@implementation CommentController

#pragma mark ========================================生命周期========================================
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"短评";
    self.view.backgroundColor = Background_Color;
    dataArray = [NSMutableArray array];
    
    
    _field.delegate = self;
    
    
    
    
    
    
    // 创建视图
    [self creatSubViewsAction];
    
    // 添加监听刷新的通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyBoardWillShowNotification:) name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyBoardNotification:) name:UIKeyboardDidHideNotification object:nil];
    
    
}

- (void)viewDidAppear:(BOOL)animated {
    
    [super viewDidAppear:animated];
    
    [IQKeyboardManager sharedManager].enable = NO;
    
    
}

- (void)viewDidDisappear:(BOOL)animated {
    
    [super viewDidDisappear:animated];
    
    [IQKeyboardManager sharedManager].enable = YES;
    
    
}



#pragma mark ========================================私有方法=============================================

#pragma mark - 创建视图
- (void)creatSubViewsAction {
    
    _bottomHeight.constant = TabBar_Height;
    
    // 表视图
    _listTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, Nav_Height, kScreenWidth, kScreenHeight - Nav_Height - TabBar_Height)
                                                  style:UITableViewStylePlain];
    _listTableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    _listTableView.backgroundColor = [UIColor clearColor];
    _listTableView.delegate = self;
    _listTableView.dataSource = self;
    _listTableView.rowHeight = UITableViewAutomaticDimension;
    _listTableView.estimatedRowHeight = 90;
    [_listTableView registerNib:[UINib nibWithNibName:@"CommentListCell" bundle:[NSBundle mainBundle]]
         forCellReuseIdentifier:@"CommentListCell"];
    [self.view addSubview:_listTableView];
    
    if(@available(iOS 11.0, *)){
        _listTableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    
    _listTableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        [self loadListAction:NO];
        
        //关闭刷新
        [_listTableView.mj_header endRefreshing];
    }];
    
    
    _listTableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        [self loadListAction:YES];
        
        //关闭刷新
        [_listTableView.mj_footer endRefreshing];
    }];
    
    [self loadListAction:0];
    
    
    [self.view insertSubview:_listTableView atIndex:0];
    
}

#pragma mark ========================================动作响应=============================================


#pragma mark ========================================网络请求=============================================

#pragma mark - 获取评论列表
- (void)loadListAction:(BOOL)isfooter {
    
    if (isfooter) {
        currentPage ++;
    } else {
        currentPage = 1;
        [dataArray removeAllObjects];
    }
    
    NSString *PageIndex =[NSString stringWithFormat:@"%ld", currentPage];
    
    NSString *method = [NSString stringWithFormat:@"GetEvaluationList"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         _newsID,@"NewsId",
                         @"20",@"PageSize",
                         PageIndex,@"PageIndex",
                         nil];
    
    //发送soap请求
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        NSArray *list;
        if ([responseCode isEqualToString:@"200"]) {
            
            commentCount = [NSString stringWithFormat:@"%@", responseObject[@"Data"][@"total"]];
            list = responseObject[@"Data"][@"rows"];
            for (NSDictionary *dic in list) {
                CommentListModel *model = [CommentListModel mj_objectWithKeyValues:dic];
                [dataArray addObject:model];
            }
            
        }
        
        
        //主线程更新视图
        dispatch_async(dispatch_get_main_queue(), ^{
            
            if (list.count >= 20) {
                [_listTableView.mj_footer endRefreshing];
            } else {
                [_listTableView.mj_footer endRefreshingWithNoMoreData];
            }
            
            [_listTableView reloadData];
            
            //去掉无数据时的视图
            if (noDataView) {
                [noDataView removeFromSuperview];
                noDataView = nil;
            }
            
            if (dataArray.count == 0) {
                
                noDataView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                noDataView.backgroundColor = Background_Color;
                
                //图标
                UIImageView *noDataImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"暂无收益数据"]];
                noDataImage.center = CGPointMake(SCREEN_WIDTH/2.0, SCREEN_HEIGHT/2.0 - 150);
                [noDataView addSubview:noDataImage];
                [_listTableView addSubview:noDataView];
                
            } else {
                
                [_listTableView reloadData];
                
            }
            
        });
        
        
        
        
        
        
        
        
    } failure:^(NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        });
        
    }];
    
}

#pragma mark - 添加评论
- (void)addCommentAction {
    
    //AddEvaluation
    //[103]资讯 => 添加评价(输入参数string Json)
    //NewsId:资讯主键
    //UserId:用户主键编号
    //ParentId:父级评论主键(默认是default)
    //ParentUserId：父级评论所属用户主键(默认是default)
    //Content:评论内容(500字内)

    NSString *method = [NSString stringWithFormat:@"AddEvaluation"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         [UserInformation sharedInstance].UserId,@"UserId",
                         _newsID,@"NewsId",
                         @"default",@"ParentId",
                         @"default",@"ParentUserId",
                         _field.text,@"Content",
                         nil];
    
    //发送soap请求
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            
            [self loadListAction:0];
            _field.text = @"";
            
        }
        
        
        dispatch_async(dispatch_get_main_queue(), ^{
            
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:responseObject[@"Message"]];
            
        });
        
    
    } failure:^(NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        });
        
    }];
    
    
    
}



#pragma mark ========================================代理方法=============================================

#pragma mark - 表视图代理方法
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return dataArray.count;
    
}


- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    
    return 0.01;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    
    return 0.01;
    
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    CommentListHeader *header = [[CommentListHeader alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 50)];
    
    header.label.text = [NSString stringWithFormat:@"最新评论(%@条)", commentCount];
    
    return header;
    
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    CommentListCell *cell = [tableView dequeueReusableCellWithIdentifier:@"CommentListCell"
                                                            forIndexPath:indexPath];
    
    if (indexPath.row < dataArray.count) {
        CommentListModel *model = dataArray[indexPath.row];
        
        // 图片
        NSString *path = [NSString stringWithFormat:@"%@%@", Image_Base_URL, model.headicon];
        [cell.icon sd_setImageWithURL:[NSURL URLWithString:path]
                              placeholderImage:[UIImage imageNamed:@"loadfail-0"]
                                       options:SDWebImageRetryFailed];
        
        if (model.isspecial.integerValue > 0) {
            cell.tipIcon.hidden = 0;
        } else {
            cell.tipIcon.hidden = 1;
        }
        
        cell.label1.text = model.username;
        cell.label2.text = model.createdate;
        
        
        if (model.parentusername != nil && ![model.parentusername isEqualToString:@""]) {
            NSMutableAttributedString *mStr = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"@%@:%@", model.parentusername, model.content]];
            [mStr addAttribute:NSForegroundColorAttributeName value:CRGB(192, 155, 93, 1) range:NSMakeRange(0, model.parentusername.length + 2)];
            cell.label3.attributedText = mStr;
        } else {
            cell.label3.text = model.content;
        }
        
        
    }
    
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    [[[UIApplication sharedApplication] keyWindow] endEditing:YES];
    
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    [[[UIApplication sharedApplication] keyWindow] endEditing:YES];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    
    [[[UIApplication sharedApplication] keyWindow] endEditing:YES];
    
    if (![textField.text isEqualToString:@""]) {
        [self addCommentAction];
    }
    
    
    return 1;
}

#pragma mark ========================================通知================================================


#pragma mark - 键盘消息
- (void)keyBoardWillShowNotification:(NSNotification *)notifi {
    
    NSDictionary *info = [notifi userInfo];
    
    CGRect rect = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue];
    _inputView.transform = CGAffineTransformMakeTranslation(0, -rect.size.height + (TabBar_Height - 49));
    
}

- (void)keyBoardNotification:(NSNotification *)notifi {
    
    _inputView.transform = CGAffineTransformMakeTranslation(0, 0);
    
    
}






































@end
